name: Flutter Build

on:
  push:
    branches:
      - main
      - next
  workflow_dispatch:

jobs:
  build-android:
    name: Android
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: "12.x"

      - name: Setup Flutter
        uses: subosito/flutter-action@master
        with:
          channel: stable

      - name: Get Previous Release Version
        id: get_previous_release
        run: echo "::set-output name=version::$(git describe --tags --abbrev=0)"

      - name: Get Current Version
        id: get_current_version
        run: echo "::set-output name=version::$(cat pubspec.yaml | grep version: | awk '{print $2}')"

      - name: Compare Versions
        id: compare_versions
        run: echo "::set-output name=is_different::${{ steps.get_previous_release.outputs.version != steps.get_current_version.outputs.version }}"

      - name: Build Flutter app for Android
        if: steps.compare_versions.outputs.is_different == 'true' || steps.get_previous_release.outputs.version == ''
        run: flutter build apk

      - name: Create Release
        if: steps.compare_versions.outputs.is_different == 'true' || steps.get_previous_release.outputs.version == ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir release_assets
          mv build/app/outputs/apk/release/app-release.apk release_assets/

      - name: Upload Release Asset
        if: steps.compare_versions.outputs.is_different == 'true' || steps.get_previous_release.outputs.version == ''
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release_assets/app-release.apk
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive
